
öz *t iş
Temizle 
{
  öz->terimler.Temizle(); 
  öz->hücreler.Temizle();
  öz->ibre.Temizle(); 
//  öz->Kök->Öz->Temizle(); 
}



Imge *imge 
iş HücreSil 
{
  Hücre := Imge->içerik.Hücre; 
  Hücre->astlar.Temizle();
  sil Hücre;  
  Imge->içerik.Hücre = boş;
}

Imge *imge 
iş Temizle 
{
  
  durum Imge->özellik: 
  { 
    seçim Özellikler::Dizi:  
      Dizi := Imge->içerik.Dizi;
      Dizi->içerik.Temizle(); 
      sil Dizi;
    seçim Özellikler::D_Metin,
          Özellikler::Metin: 
      Imge->içerik.Metin.Sil();
    seçim Özellikler::Hücre: 
      Imge->içerik.Hücre->astlar.Temizle(); 
      sil Imge->içerik.Hücre; 
      Imge->içerik.Hücre = boş;
    seçim Özellikler::Harfler: 
      // stdio::printf('-- i metin : %s\n', Imge->içerik.Metin.Harfler); 
      //Imge->içerik.Metin->Sil();
  }
  eğer Imge->Ad: 
    Imge->Ad.Sil();
  sil Imge;
}

öz *ibre 
iş Temizle 
{ 
  //stdio::printf('limeka -> %d:%d', öz->dizi.hacim, öz->dizi.boyut);
  her i := 0; i < öz->dizi.boyut; i++: 
  {
    öz->dizi.Nesneler[i]->Temizle();
  }
  öz->dizi.Temizle();
}