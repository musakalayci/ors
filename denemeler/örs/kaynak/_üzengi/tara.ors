öz *t 
iş Tara : *imge
{
  değer Simge *imge = {};
  durum öz->ibre.Şuan->özellik:
  {
    seçim Özellikler::Son:
      stdio::printf('--son--\n');
      dön &öz->ibre.bitiş;
    varsayılan:
      durum öz->imleç.okunan:
      {
        seçim Özellikler::Son: 
          öz->ibre.Şuan = &öz->ibre.bitiş;
          dön &öz->ibre.bitiş;
        seçim merkez::ascii::Yeni_Satır: 
          öz->imleç.sütun = 0;
          öz->imleç.satır++;
          geç;
        seçim 
          merkez::ascii::Boşluk, 
          merkez::ascii::Satır:
            öz->ilerlet();
            tekrar;
        seçim merkez::ascii::sayılar: 
          dön öz->SıradakiSayı();
        seçim 
          merkez::ascii::küçükler, 
          merkez::ascii::büyükler,
          merkez::ascii::utf_belirteci, 
          merkez::ascii::Alt_Tire:
           dön öz->SıradakiSözcük();
        seçim merkez::ascii::noktalama: 
          değer noktalama t64 = <t64>öz->imleç.okunan;
          başlangıç := öz->imleç.konum;
          sonu      := öz->imleç.okumaKonumu;
          öz->ilerlet();
          durum noktalama:
          {
            seçim merkez::ascii::Çift_Tırnak: 
              dön öz->SıradakiMetin();
            seçim merkez::ascii::Bölü:
              durum öz->imleç.okunan:
              {
                seçim merkez::ascii::Bölü:
                  dön öz->SıradakiYorum();
              }
            seçim merkez::ascii::Ayraç:
              durum öz->imleç.okunan:
              {
                seçim merkez::ascii::Ayraç:
                  sonu++;
                  öz->ilerlet();
                  noktalama = Simgeler::Ya_Da;
                seçim merkez::ascii::Eşit:
                  sonu++;
                  öz->ilerlet();
                  noktalama = Simgeler::Tekil_Ya_Da_Eşit; 
              } 
            seçim merkez::ascii::İki_Nokta:
            seçim merkez::ascii::Virgül:
            seçim merkez::ascii::Noktalı_Virgül: 
          }
          Simge = öz->ImgeVer(
            Özellikler::Noktalama, 
            noktalama); 
          Simge.konumlandır(
            öz->imleç, başlangıç, sonu);
          dön Simge;
  
        varsayılan: 
          dön öz->HataVer(1);
      }
  }
  öz->ilerlet();
  dön Simge;
}
