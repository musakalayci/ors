
Üretim *t 
 iş _işlemler SolNesne *nesne::t, SağNesne *nesne::t, işlem tam : *nesne::t 
{
  değer Nesne *nesne::t = boş;
  durum işlem: 
  {
    seçim simge::Özellik::Yüzde:
      Nesne = SolNesne->Kalan(Üretim, SağNesne);
    seçim simge::Özellik::Artı,
          simge::Özellik::Artı_Eşit: 
      Nesne = SolNesne->Toplama(Üretim, SağNesne);
    seçim simge::Özellik::Çarp_Eşit,
          simge::Özellik::Yıldız: 
      Nesne = SolNesne->Çarpma(Üretim, SağNesne);
    seçim simge::Özellik::Bölü,
          simge::Özellik::Böl_Eşit: 
      Nesne = SolNesne->Bölme(Üretim, SağNesne);
    seçim simge::Özellik::Eksi,
          simge::Özellik::Eksi_Eşit: 
      Nesne = SolNesne->Çıkarma(Üretim, SağNesne);
    seçim simge::Özellik::Sağa_Kaydır,
          simge::Özellik::Sağa_Kaydır_Eşit: 
      Nesne = SolNesne->SağaKaydır(Üretim, SağNesne);
    seçim simge::Özellik::Sola_Kaydır,
          simge::Özellik::Sola_Kaydır_Eşit: 
      Nesne = SolNesne->SolaKaydır(Üretim, SağNesne); 
    seçim simge::Özellik::T_Ve,
          simge::Özellik::T_Ve_Eşit: 
      Nesne = SolNesne->TekilVe(Üretim, SağNesne);
    seçim simge::Özellik::T_Veya,
          simge::Özellik::T_Veya_Eşit: 
      Nesne = SolNesne->TekilVeya(Üretim, SağNesne); 
    seçim simge::Özellik::Şapka, simge::Özellik::T_Ters_Veya_Eşit: 
      Nesne = SolNesne->TersVeya(Üretim, SağNesne);
  }
  dön Nesne;
}

Üretim *t 
iş temel İşlem *imge::temel::t : *nesne::t 
{
  İmge := İşlem->Öz;
  SolNesne := Üretim->ifade(İşlem->Sol, evet);
  SağNesne := Üretim->ifade(İşlem->Sağ, evet); 
  
  eğer SolNesne->Atıf->özellik == imge::Özellik::Hata: 
    dön SolNesne; 
  eğer SağNesne->Atıf->özellik == imge::Özellik::Hata: 
    dön SağNesne;
       
  değer Nesne *nesne::t = Üretim->_işlemler(
    SolNesne, SağNesne, İşlem->özellik);

  
  dön Nesne;
}



Üretim *t 
iş atama İşlem *imge::temel::t : *nesne::t 
{
  İmge := İşlem->Öz;
  SolNesne := Üretim->ifade(İşlem->Sol, hayır);
  SağNesne := Üretim->ifade(İşlem->Sağ, evet);
  değer Nesne *nesne::t = SolNesne;

  eğer SolNesne && SağNesne: 
  {
    durum SolNesne->Atıf->özellik: 
    {
      seçim imge::Özellik::Hata: 
        dön SolNesne;
    }  
    durum SağNesne->Atıf->özellik: 
    {
      seçim imge::Özellik::Hata: 
        dön SağNesne; 
      seçim imge::Özellik::Boş: 
        dön SolNesne->BoşGeçir(Üretim); 
      
    } 

    eğer SağNesne->YapıtaşıMı(): 
      SağNesne = SağNesne->YapıtaşıÇeviri(Üretim, SolNesne->Özet->No());
    
    SolNesne->Geçir(Üretim, SağNesne);
  }
  
  
  dön Nesne;
}

Üretim *t 
iş atamaEşitle İşlem *imge::temel::t : *nesne::t 
{
  İmge := İşlem->Öz;
  SolNesne := Üretim->ifade(İşlem->Sol, hayır);
  SağNesne := Üretim->ifade(İşlem->Sağ, evet);
  değer Nesne *nesne::t = SolNesne;
  eğer SolNesne && SağNesne:
  {
    Yükleme := SolNesne->Yükle(Üretim); 
    SağNesne = SağNesne->Çeviri(Üretim, Yükleme); 
    //i::Acil("sağnesne :%p --> %d\n", SağNesne, Yükleme->Derece());

    Gelen := Üretim->_işlemler(Yükleme, SağNesne, İşlem->özellik); 
    SolNesne->Geçir(Üretim, Gelen);
    dön Gelen;
  } 
}

Üretim *t 
iş _geçir İşlem *imge::temel::t : *nesne::t  
{

}

Üretim *t 
iş değiştir İşlem *imge::temel::t : *nesne::t 
{
  Üretim->Bölüm->Genel()->Yaz(
    "  ;değiştirme: \n");  
  SolNesne := Üretim->ifade(İşlem->Sol, hayır); 
  SağNesne := Üretim->ifade(İşlem->Sağ, hayır); 

  SolYükleme := SolNesne->Yükle(Üretim);

  Geçici := SolYükleme->YeniYarat(Üretim); 
  Geçici->Geçir(Üretim, SolYükleme);

  SağYükleme := SağNesne->Yükle(Üretim);
  SolNesne->Geçir(Üretim, SağYükleme);
  GeçiciYükleme := Geçici->Yükle(Üretim);
  SağNesne->Geçir(Üretim, GeçiciYükleme);


  Üretim->Bölüm->Genel()->Yaz(
    "  ;değiştirme son: \n");  
  dön SolNesne;
}