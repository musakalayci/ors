
Üretim *t 
iş işlemAtfı İşlem *imge::işlem::t  
{
  no := Üretim->Bölüm->Kütüphane->no; 
  no2 := İşlem->Öz->Kütüphane->no;
  eğer no == no2: 
    dön; 
      
  Bulunan := Üretim->Bölüm->İşlemTanımları->Ara(İşlem->no); 
  eğer !Bulunan: 
  {
    Üretim->Bölüm->İşlemTanımıEkle(İşlem->Öz); 
  }
}



Üretim *t 
iş aramaİfadesi İmge *imge::t: *nesne::t 
{
  Bulunan := Üretim->Aramaİfadesi(İmge);
  //i::Yaz("oluyor muuuuuuuuuuuuuu %p\n", Bulunan); 
  eğer Bulunan: 
  {
    durum Bulunan->özellik: 
    {
      seçim imge::Özellik::Çağrı: 
        dön Üretim->çağrı(Bulunan->içerik.Çağrı);
      seçim imge::Özellik::SanalBirimDeğeri: 
        dön &Bulunan->nesne;
      seçim imge::Özellik::BirimDeğeri: 
        dön &Bulunan->nesne;
      varsayılan: 
        dön bildiri::Nesne(
          Üretim->Bölüm->Kaynak, 
          bildiri::Üretim::Bulunamadı, 
          &İmge->konum,
          "Çağrı ifadesi bulunamadı. %p", Bulunan);
    }
  }
  değilse: 
  {
    Bulunan = Üretim->Tanımlanan(İmge);
    //Üretim->Derleme->Döküm->İmge(İmge, 0, '\n');
    eğer Bulunan: 
    {
      durum Bulunan->özellik: 
      {
        seçim imge::Özellik::İşlem,
            imge::Özellik::İşlemTanımı, 
            imge::Özellik::Türİşlemi: 
        durum İmge->özellik: 
        {
          seçim imge::Özellik::Çağrı: 
            İmge->nesne.AtıfsızNakil(&Bulunan->nesne);
            İmge->nesne.Atıf = Bulunan; 
            İmge->içerik.Çağrı->Atıf = Bulunan;
            dön Üretim->çağrı(İmge->içerik.Çağrı);
          varsayılan: 
            dön Bulunan;
        }
            i::Yaz("Oldu demi ? %s\n", ); 

        seçim imge::Özellik::Çağrı: 
          dön Üretim->çağrı(Bulunan->içerik.Çağrı);
      }
    }
    değilse:
      dön bildiri::Nesne(
          Üretim->Bölüm->Kaynak, 
          bildiri::Üretim::Bulunamadı, 
          &İmge->konum,
          "Çağrı ifadesi bulunamadı. %p", Bulunan);
  }
}

Üretim *t 
iş çağrıHazırlık 
  Çağrı *imge::çağrı::t, 
  Konum *imge::işlem::konum, 
  Yığın *nesne::_nesneler: *nesne::t 
{
  eğer Konum->girdi.boyut <= 0:
    dön Üretim->tamam(); 
  

  değer Gelen *nesne::t   = boş; 
  değer Özet  *cins::özet = boş;
  değer GelenÖzet  *cins::özet = boş;
  değer Argüman *imge::t  = boş;
  çağrıBoyutu            := Çağrı->Argümanlar->boyut; 
  girdiBoyutu            := Konum->girdi.boyut; 
  j := (seç Yığın->boyut: evet: 1, varsayılan: 0); 
  her i := 0; i < çağrıBoyutu; i++: 
  {
    Argüman = Çağrı->Argümanlar->Nesneler[i]; 
    Özet = Konum->girdi.Nesneler[j]; 
    j++;
    //i::Yaz("de hadi da %s: %p\n", Çağrı->Öz->Ad->_harfler, Argüman);
    durum Argüman->özellik: 
    {
      seçim imge::Özellik::SabitSayı, 
            imge::Özellik::Sayı: 
        Gelen = Üretim->ifade(Argüman, hayır);
      seçim imge::Özellik::Harfler: 
        Gelen = &Argüman->nesne;
      seçim imge::Özellik::Boş: 
        Gelen = nesne::Yeni(Üretim->Bölüm->Hafıza, Argüman, nesne::Anlam::Değer); 
        Gelen->Özet = Özet;
        Gelen->Atıf = Argüman; 
        Gelen->no = -1;
        eğer !Özet->YapıtaşıMı(): 
        {
          eğer Özet->derece < 1: 
            Gelen->özellik.derece = 1; 
          değilse: 
            Gelen->özellik.derece = Özet->derece;
        }
        değilse: 
        {
          Gelen->özellik.derece = Özet->derece; 
        }
      varsayılan: 
        Gelen = Üretim->ifade(Argüman, hayır);
        eğer !Gelen: 
        {
          Çağrı->Öz->Uzantı(&Üretim->Bellekler->ilk);
          dön bildiri::Nesne(Üretim->Bölüm->Kaynak, 
            bildiri::Üretim::Çağrı,
            &Argüman->konum, 
            "%s çağrısı %d. değişkeni için hatalı argüman.",
            Üretim->Bellekler->ilk->_veri, 
            i);
        }
          
        durum Gelen->Makina(): 
        {
          seçim nesne::Makina::Hata: 
            dön Gelen; 
          seçim 
                nesne::Makina::SanalÇağrı: 
            //i::Yaz("Gelen _ %p\n", Gelen);
          seçim nesne::Makina::Çağrı,
                nesne::Makina::İçSabit, 
                nesne::Makina::KonumAlma, 
                nesne::Makina::ÇeviriYapıtaşı,
                nesne::Makina::Karşılaştırma:
          varsayılan: 
            Gelen = Gelen->Yükle(Üretim);
        }
    }
    GelenÖzet = Gelen->Özet;
    eğer Özet: 
    {
      eğer Özet->Öz->nesne.Derece(): 
    {
      Gelen = Gelen->Çeviri(Üretim, &Özet->Öz->nesne);
    }
    }
    Yığın->Ekle(Gelen);
  }
  dön &Çağrı->Öz->nesne;
}

Üretim *t 
iş türÇağrısı Çağrı *imge::çağrı::t, TürDeğeri *nesne::t : *nesne::t 
{
  İmge := Çağrı->Öz;
  Nesne := &İmge->nesne;
  Atıf := Çağrı->Atıf; 
  Üretim->çağrıSıfırla();
  değer Konum *imge::işlem::konum = boş; 
  değer İşlemNesnesi *nesne::t    = boş; 
  türlüMü := 1;
  durum Atıf->özellik: 
  {
    seçim imge::Özellik::SanalTürİşlemi: 
      dön Üretim->sanalTürÇağrısı(Çağrı, TürDeğeri);
    seçim imge::Özellik::İşlem, 
          imge::Özellik::Türİşlemi, 
          imge::Özellik::İşlemTanımı: 
      Konum = Atıf->nesne.Özet->Gösterge->içerik.İşlemKonumu;
      İşlemNesnesi = &Atıf->nesne; 
      Üretim->işlemAtfı(Atıf->içerik.İşlem);
      ileti: "tür atfı ekle";
    varsayılan: 
      dön bildiri::Nesne(Üretim->Bölüm->Kaynak, 
        bildiri::Üretim::Çağrı,
        &İmge->konum, 
        "Hatalı çağrı.");
  }
  Yığın := temiz(nesne::_nesneler); 
  Yığın->Ekle(TürDeğeri);
  Gelen := Üretim->çağrıHazırlık(Çağrı, Konum, Yığın); 
  eğer Gelen->Hatalıİse(): 
  {
    sil Yığın;
    dön Gelen;
  }
  Nesne->Nakil(&Konum->Çıktı->Öz->nesne); 
 // Nesne->Özet = Konum->Çıktı;
 // i::Acil("çağrı ---> %p\n", Nesne->Özet->Öz);
  Nesne->Atıflandır(Atıf, Konum->Çıktı);
  Gelen = Nesne->Çağrı(Üretim, Konum, İşlemNesnesi, Yığın);
  sil Yığın;
  dön Gelen;
}

Üretim *t 
iş çağrı Çağrı *imge::çağrı::t : *nesne::t 
{
  İmge := Çağrı->Öz;
  Nesne := &İmge->nesne;
  Atıf := Çağrı->Atıf; 
  değer Konum *imge::işlem::konum = boş; 
  değer İşlemNesnesi *nesne::t    = boş; 

  Üretim->çağrıSıfırla();
  durum Atıf->özellik: 
  {
    seçim imge::Özellik::İşlem, 
          imge::Özellik::Türİşlemi, 
          imge::Özellik::İşlemTanımı: 
      Konum = Atıf->nesne.Özet->Gösterge->içerik.İşlemKonumu;
      İşlemNesnesi = &Atıf->nesne; 
      Üretim->işlemAtfı(Atıf->içerik.İşlem);
      ileti: "tür atfı ekle"; 
    seçim imge::Özellik::İşlemAltyapıTaslağı: 
      dön Üretim->altyapıÇağrısı(Çağrı);
    seçim imge::Özellik::Değer: 
      Değer := Çağrı->Atıf->içerik.Değer; 
      Gösterge := Değer->Özet->Gösterge;
      durum Gösterge->özellik: 
      {
        seçim imge::Özellik::İşlemKonumu: 
          Konum = Gösterge->içerik.İşlemKonumu;
        seçim imge::Özellik::Tür: 
        varsayılan: 
          dön bildiri::Nesne(Üretim->Bölüm->Kaynak, 
                bildiri::Üretim::Çağrı,
                &İmge->konum, 
                "Hatalı işlem değeri '%s' çağrısı.", Değer->Öz->Ad->_harfler);
      }
      Yüklenen := Değer->Öz->nesne.Yükle(Üretim); 
      İşlemNesnesi = Yüklenen;
    seçim imge::Özellik::Sanalİşlem: 
      dön Üretim->sanalÇağrı(Çağrı);
    varsayılan: 
      dön bildiri::Nesne(Üretim->Bölüm->Kaynak, 
        bildiri::Üretim::Çağrı,
        &İmge->konum, 
        "Hatalı çağrı.");
  }

  Yığın := temiz(nesne::_nesneler); 
  Gelen := Üretim->çağrıHazırlık(Çağrı, Konum, Yığın);
  eğer Gelen->Hatalıİse(): 
  {
    sil Yığın; 
    dön bildiri::Nesne(Üretim->Bölüm->Kaynak, 
                bildiri::Üretim::Çağrı,
                &İmge->konum, 
                "%s çağrısı için hatalı değişkenler.", Çağrı->Öz->Ad->_harfler);
  }
  Nesne->Nakil(&Konum->Çıktı->Öz->nesne); 
 // Nesne->Özet = Konum->Çıktı;
 // i::Acil("çağrı ---> %p\n", Nesne->Özet->Öz);
  Nesne->Atıflandır(Atıf, Konum->Çıktı);
  
  Gelen = Nesne->Çağrı(Üretim, Konum, İşlemNesnesi, Yığın); 
  sil Yığın;
  dön Gelen;
}

Üretim *t 
iş hazırÇağrı Çağrı *imge::çağrı::hazır: *nesne::t 
{
  Konum        := Çağrı->Atıf->nesne.Özet->Gösterge->içerik.İşlemKonumu; 
  İşlemNesnesi := &Çağrı->Atıf->nesne;
  Nesne        := &Çağrı->Öz->nesne; 
  Çağrı->Öz->nesne.Nakil(&Konum->Çıktı->Öz->nesne); 
  Nesne->Atıflandır(Çağrı->Atıf, Konum->Çıktı); 
  aa :=       Üretim->Bölüm->İşlemTanımları;
  Üretim->Bölüm->İşlemTanımıEkle(Çağrı->Atıf);
  Argümanlar := &Çağrı->argümanlar;
  dön Nesne->Çağrı(Üretim, Konum, İşlemNesnesi, Argümanlar);
}

Üretim *t 
iş altyapıÇağrısı Çağrı *imge::çağrı::t: *nesne::t 
{
  Hafıza := Üretim->Bölüm->Hafıza; 
  Nesne := nesne::Yeni(
    Hafıza, Çağrı->Öz, nesne::Anlam::Makina);
  Taslak := Çağrı->Atıf->içerik.Taslak; 
  Nesne->Yapılandır(Hafıza, Çağrı->Atıf, boş, 256, nesne::Anlam::Makina);
  Nesne->İşlemlendir(nesne::Makina::Çağrı);
  Nesne->Metin->Yaz("llvm.%s", Taslak->Öz->Ad->_harfler);
  Atıf := Çağrı->Öz->nesne.Atıf;
  Konum := Atıf->nesne.Özet->Gösterge->içerik.İşlemKonumu;
  İşlemNesnesi := &Atıf->nesne; 
  Üretim->işlemAtfı(Atıf->içerik.İşlem); 

  Yığın := temiz(nesne::_nesneler); 
  Gelen := Üretim->çağrıHazırlık(Çağrı, Konum, Yığın);
  eğer Gelen->Hatalıİse():
  {
    sil Yığın;
    dön bildiri::Nesne(Üretim->Bölüm->Kaynak, 
                bildiri::Üretim::Çağrı,
                &Çağrı->Öz->konum, 
                "Hatalı çağrı.", Çağrı->Öz->Ad->_harfler);
  }
  Gelen = Nesne->Çağrı(Üretim, Konum, İşlemNesnesi, Yığın); 
  sil Yığın; 
  dön Gelen; 
}
