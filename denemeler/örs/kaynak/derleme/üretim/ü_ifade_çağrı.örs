Üretim *t 
iş işlemAtfı İşlem *imge::işlem::t  
{
  no := Üretim->Bölüm->Kütüphane->no; 
  no2 := İşlem->Öz->Kütüphane->no;
  eğer no == no2: 
    dön; 
      
  Bulunan := Üretim->Bölüm->İşlemTanımları->Ara(İşlem->no); 
  eğer !Bulunan: 
  {
    Üretim->Bölüm->İşlemTanımları->Ekle(İşlem->no, İşlem);
  }
}

Üretim *t 
iş aramaİfadesi İmge *imge::t: *nesne::t 
{
  Bulunan := Üretim->Aramaİfadesi(İmge);
  //i::Yaz("oluyor muuuuuuuuuuuuuu %p\n", Bulunan); 
  eğer Bulunan: 
  {
    durum Bulunan->özellik: 
    {
      seçim imge::Özellik::Çağrı: 
        dön Üretim->çağrı(Bulunan->içerik.Çağrı);
      
    }
  }
  değilse: 
  {
    Bulunan = Üretim->Tanımlanan(İmge);
    Üretim->Derleme->Döküm->İmge(İmge, 0, '\n');
    eğer Bulunan: 
    {
      durum Bulunan->özellik: 
      {
        seçim imge::Özellik::Çağrı: 
          dön Üretim->çağrı(Bulunan->içerik.Çağrı);
      }
    }
    değilse:
      dön bildiri::Nesne(
          Üretim->Bölüm->Kaynak, 
          bildiri::Üretim::Bulunamadı, 
          &İmge->konum,
          "Çağrı ifadesi bulunamadı. %p", Bulunan);
  }
}

Üretim *t 
iş çağrıHazırlık 
  Çağrı *imge::çağrı::t, 
  Konum *imge::işlem::konum,
  türlüMü tam: *nesne::nesneler 
{
  Yığın := &Üretim->yığın.çağrıNesneleri; 
  eğer Konum->girdi.boyut <= 0:
    dön Yığın; 
  eğer !türlüMü: 
    Üretim->çağrıSıfırla();
  değer Gelen *nesne::t   = boş; 
  değer Özet  *cins::özet = boş;
  değer Argüman *imge::t  = boş;
  çağrıBoyutu            := Çağrı->Argümanlar->boyut; 
  girdiBoyutu            := Konum->girdi.boyut; 
  her i := 0; i < çağrıBoyutu; i++: 
  {
    Argüman = Çağrı->Argümanlar->Nesneler[i];
    //i::Yaz("de hadi da %s: %p\n", Çağrı->Öz->Ad->_harfler, Argüman);
    durum Argüman->özellik: 
    {
      seçim imge::Özellik::SabitSayı, 
            imge::Özellik::Sayı: 
        Gelen = Üretim->ifade(Argüman, hayır);
      seçim imge::Özellik::Harfler: 
        Gelen = &Argüman->nesne;
      varsayılan: 
        Gelen = Üretim->ifade(Argüman, hayır);
        eğer !Gelen: 
          dön boş;
          
        durum Gelen->Makina(): 
        {
          seçim nesne::Makina::Hata: 
            dön boş;
          seçim nesne::Makina::Çağrı,
                nesne::Makina::İçSabit,
                nesne::Makina::SanalÇağrı, 
                nesne::Makina::KonumAlma, 
                nesne::Makina::ÇeviriYapıtaşı,
                nesne::Makina::Karşılaştırma:
            varsayılan: 
              Gelen = Gelen->Yükle(Üretim);
        }
    }
    Üretim->yığın.çağrıNesneleri.Ekle(Gelen);
  }
  dön Yığın;
}

Üretim *t 
iş türÇağrısı Çağrı *imge::çağrı::t, TürDeğeri *nesne::t : *nesne::t 
{
  İmge := Çağrı->Öz;
  Nesne := &İmge->nesne;
  Atıf := Çağrı->Atıf; 
  Üretim->çağrıSıfırla();
  değer Konum *imge::işlem::konum = boş; 
  değer İşlemNesnesi *nesne::t    = boş; 
  türlüMü := 1;
  durum Atıf->özellik: 
  {
    seçim imge::Özellik::SanalTürİşlemi: 
      dön Üretim->sanalTürÇağrısı(Çağrı, TürDeğeri);
    seçim imge::Özellik::İşlem, 
          imge::Özellik::Türİşlemi, 
          imge::Özellik::İşlemTanımı: 
      Konum = Atıf->nesne.Özet->Gösterge->içerik.İşlemKonumu;
      İşlemNesnesi = &Atıf->nesne; 
      Üretim->işlemAtfı(Atıf->içerik.İşlem);
      ileti: "tür atfı ekle";
    varsayılan: 
      dön bildiri::Nesne(Üretim->Bölüm->Kaynak, 
        bildiri::Üretim::Çağrı,
        &İmge->konum, 
        "Hatalı çağrı.");
  }
  Üretim->yığın.çağrıNesneleri->Ekle(TürDeğeri);
  Yığın := Üretim->çağrıHazırlık(Çağrı, Konum, türlüMü);
  eğer !Yığın: 
    dön boş;
  Nesne->Nakil(&Konum->Çıktı->Öz->nesne); 
 // Nesne->Özet = Konum->Çıktı;
 // i::Acil("çağrı ---> %p\n", Nesne->Özet->Öz);
  Nesne->Atıflandır(Atıf, Konum->Çıktı);
  
  dön Nesne->Çağrı(Üretim, Konum, İşlemNesnesi, Yığın);
}

Üretim *t 
iş çağrı Çağrı *imge::çağrı::t : *nesne::t 
{
  İmge := Çağrı->Öz;
  Nesne := &İmge->nesne;
  Atıf := Çağrı->Atıf; 
  değer Konum *imge::işlem::konum = boş; 
  değer İşlemNesnesi *nesne::t    = boş; 
  türlüMü := 0;

  Üretim->çağrıSıfırla();
  durum Atıf->özellik: 
  {
    seçim imge::Özellik::İşlem, 
          imge::Özellik::Türİşlemi, 
          imge::Özellik::İşlemTanımı: 
      Konum = Atıf->nesne.Özet->Gösterge->içerik.İşlemKonumu;
      İşlemNesnesi = &Atıf->nesne; 
      Üretim->işlemAtfı(Atıf->içerik.İşlem);
      ileti: "tür atfı ekle";
    seçim imge::Özellik::Değer: 
      i::Acil("lluimkelaymukilyeakyliumkeayleimku"); 
      Değer := Çağrı->Atıf->içerik.Değer; 
      Gösterge := Değer->Özet->Gösterge;
      durum Gösterge->özellik: 
      {
        seçim imge::Özellik::İşlemKonumu: 
          Konum = Gösterge->içerik.İşlemKonumu;
        seçim imge::Özellik::Tür: 
        varsayılan: 
          dön bildiri::Nesne(Üretim->Bölüm->Kaynak, 
                bildiri::Üretim::Çağrı,
                &İmge->konum, 
                "Hatalı işlem değeri '%s' çağrısı.", Değer->Öz->Ad->_harfler);
      }
      Yüklenen := Değer->Öz->nesne.Yükle(Üretim); 
      İşlemNesnesi = Yüklenen;
    seçim imge::Özellik::Sanalİşlem: 
      dön Üretim->sanalÇağrı(Çağrı);
    varsayılan: 
      dön bildiri::Nesne(Üretim->Bölüm->Kaynak, 
        bildiri::Üretim::Çağrı,
        &İmge->konum, 
        "Hatalı çağrı.");
  }
  
  Yığın := Üretim->çağrıHazırlık(Çağrı, Konum, türlüMü);
  eğer !Yığın: 
  {
    i::Yaz("---> isim: %s\n", Çağrı->Öz->Ad->_harfler);
    dön boş;
}
  Nesne->Nakil(&Konum->Çıktı->Öz->nesne); 
 // Nesne->Özet = Konum->Çıktı;
 // i::Acil("çağrı ---> %p\n", Nesne->Özet->Öz);
  Nesne->Atıflandır(Atıf, Konum->Çıktı);
  
  dön Nesne->Çağrı(Üretim, Konum, İşlemNesnesi, Yığın);
}

Üretim *t 
iş hazırÇağrı Çağrı *imge::çağrı::hazır: *nesne::t 
{

  Konum        := Çağrı->Atıf->nesne.Özet->Gösterge->içerik.İşlemKonumu; 
  İşlemNesnesi := &Çağrı->Atıf->nesne;
  Nesne        := &Çağrı->Öz->nesne; 
  Çağrı->Öz->nesne.Nakil(&Konum->Çıktı->Öz->nesne); 
  Nesne->Atıflandır(Çağrı->Atıf, Konum->Çıktı); 
  aa :=       Üretim->Bölüm->İşlemTanımları;
  Üretim->Bölüm->İşlemTanımıEkle(Çağrı->Atıf);
  dön Nesne->Çağrı(Üretim, Konum, İşlemNesnesi, &Çağrı->argümanlar);
}