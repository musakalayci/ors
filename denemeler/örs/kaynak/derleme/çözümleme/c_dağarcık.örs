Çözümleme *t 
iş dağarcıkNo : d32 
{
  dön (Çözümleme->sıralar.dağarcık)++;
}

Çözümleme *t 
iş dağarcık : *imge::t 
{
  Dağarcık := imge::dağarcık::Yeni(
      Çözümleme->hafıza(), 
      Çözümleme->dağarcıkNo());
  İmge := Dağarcık->Öz;  
  Üst := Çözümleme->yığınlar.dağarcık.Son(); 
  Dağarcık->Üst = Üst;
  Çözümleme->yığınlar.dağarcık.Ekle(Dağarcık); 
  İmge->KonumGüncelle(Çözümleme->şuanki());
  
  Çözümleme->sıradaki(); 
  değer Satır *imge::t = boş; 
  değer Gelen *imge::t = boş;
  her Çözümleme->Devam(): 
  {
    durum Çözümleme->şuanki()->özellik:
    {
      seçim simge::Özellik::Yorum:
        Çözümleme->sıradaki();
      seçim simge::Özellik::Noktalı_Virgül:
        Çözümleme->sıradaki();
      seçim simge::Özellik::Küme_Kapa:
        Çözümleme->sıradaki();
        son;
      varsayılan: 
        Satır = Çözümleme->satır();
        eğer Satır:
        {
          durum Satır->özellik:
          {
            seçim imge::Özellik::Hata:
              dön Satır;
            seçim imge::Özellik::İfadeSonu:
            varsayılan:
              Gelen = Dağarcık->Ekle(Satır);
              eğer Gelen:
                dön bildiri::Özel(Çözümleme->Kaynak, 
                      bildiri::Çözümleme::Tanım, 
                      &Çözümleme->şuanki()->konum, 
                      "%s tekrar tanımlanmış.", 
                      Gelen->Ad->_harfler);
          }
        }
        değilse: 
          dön bildiri::Özel(Çözümleme->Kaynak, 
                bildiri::Çözümleme::Genel, 
                &Çözümleme->şuanki()->konum, 
                "Tanımsız satır.");
    }
  }
  Çözümleme->yığınlar.dağarcık.Çıkar();
  dön İmge;
}