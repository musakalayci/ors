
Çözümleme *t 
küresel iş _yalın Tür *imge::cins::t: *imge::t 
{
  İmge := Tür->Öz; 

  durum Çözümleme->şuanki()->özellik:
  {
    seçim simge::Özellik::Noktalı_Virgül:
      eğer Tür->özelleştirme & imge::Özelleştirme::Yaban: 
      {
        Tür->Öz->nesne.Özet->Öz->KonumGüncelle(Çözümleme->şuanki());
        Tür->özellik.türü = imge::cins::Özellik::Yaban;
      }
      değilse: 
        Tür->özellik.türü = imge::cins::Özellik::Tanım;
      dön İmge;
  }
  
  Tür->özellik.türü = imge::cins::Özellik::Yalın;

  //Çözümleme->gelecek()->Yaz("gelecek");
  Hafıza := Çözümleme->hafıza();
  Ad := Hafıza->Harflerden('...');
  Değişken := imge::değişken::Yeni(Hafıza, Ad); 
  Değişken->Öz->KonumGüncelle(Çözümleme->şuanki());
  Gelen := Çözümleme->türÖzeti(Değişken->Özet); 
  durum Gelen->özellik:
  {
    seçim imge::Özellik::Hata:
      dön İmge;
    seçim imge::Özellik::TürÖzeti: 
      Değişken->Özet = Gelen->içerik.TürÖzeti; 
  }
  Tür->ÜyeEkle(Değişken->Öz); 
  Tür->Öz->nesne.Özet = Değişken->Özet;
  durum Çözümleme->şuanki()->özellik:
  {
    seçim simge::Özellik::Noktalı_Virgül: 
      Çözümleme->sıradaki();
    varsayılan: 
      //Çözümleme->şuanki()->Yaz("ne ki ?");
      dön Çözümleme->Hataİmla(
            "Yalın tür '%s' tanımı için noktalı virgül bekleniyor.");
  }
  dön İmge;
}



Çözümleme *t 
iş türDalları Tür *imge::cins::t : *imge::t 
{

  Simge := Çözümleme->şuanki(); 
  değer Gelen *imge::t           = boş;  

  her Çözümleme->Devam(): 
  {
    Simge = Çözümleme->şuanki();
    durum Simge->özellik: 
    {
      seçim simge::Özellik::Yorum:
        Simge = Çözümleme->sıradaki();
      seçim simge::Özellik::Küme_Kapa:
        Çözümleme->sıradaki();
        dön Tür->Öz;
      seçim simge::Özellik::Sözcük:
        Gelen = Çözümleme->değişken(Tür->Öz); 
    }
    eğer Gelen:
    {
      durum Gelen->özellik: 
      {
        seçim imge::Özellik::Değişken: 
          Tür->ÜyeEkle(Gelen);
        varsayılan:
      }
      durum Çözümleme->şuanki()->özellik:
      {
        seçim simge::Özellik::Noktalı_Virgül: 

         // Çözümleme->Şuanki()->Yaz(""); 
          Simge = Çözümleme->sıradaki();
          Gelen = boş;
        varsayılan:
          dön Çözümleme->Hataİmla("Tür üyesi tanımı için noktalı virgül bekleniyor.");
      }
    } 
    değilse: son;
  }
  dön Tür->Öz;
}

Çözümleme *t 
iş _tür özelleştirme mimari : *imge::t 
{
  Hafıza := &Çözümleme->Derleme->hafıza;
  özellik := Çözümleme->şuanki()->özellik; 
  Simge := Çözümleme->tekil(); 
  değer İmge *imge::t           = boş; 
  değer Gelen *imge::t          = boş;
  değer Tür *imge::cins::t     = boş;
  durum Simge->özellik: 
  {
    seçim simge::Özellik::Sözcük:
      Tür = imge::cins::Yeni(
        Hafıza, 
        Simge->içerik.Metin, 
        (imge::cins::Özellik::Varsayılan)); 
      Üst := Çözümleme->yığınlar.cins.Son(); 
      İmge = Tür->Öz;  
      Tür->özelleştirme = özelleştirme;
      İmge->KonumGüncelle(Çözümleme->şuanki());
      Çözümleme->tekil();
    varsayılan: 
      dön Çözümleme->Hataİmla("Tür tanımı için isim bekleniyor.");
  }
  ortaklık := (özelleştirme & imge::Özelleştirme::Ortak);  
  eğer ortaklık: 
  {
    Tür->özellik.türü = imge::cins::Özellik::Ortak;
  }
  sanallık := (özelleştirme & imge::Özelleştirme::Sanal);
  eğer sanallık == imge::Özelleştirme::Sanal:
  {
    durum Çözümleme->şuanki()->özellik:
    {
      seçim simge::Özellik::Sözcük: 
        //i::Yaz("------> imge %s\n", İmge->Ad->_harfler);
        Tür->Donatım = 
          <*imge::cins::donatım>Hafıza->Yeni(
            @imge::cins::donatım, @mimari); 
        Tür->Donatım->no = Tür->no; 
        Tür->özellik.türü =  imge::cins::Özellik::Kalıp;
        her i := 0; i < 2;:
        {
          durum Çözümleme->şuanki()->özellik:
          {
            seçim simge::Özellik::Virgül:
              Çözümleme->tekil();
            seçim simge::Özellik::Küme_Aç:
              Tür->Donatım->boyut = i;
              son;
            seçim simge::Özellik::Sözcük:
              Taç := imge::Adlı( 
                Hafıza,
                Çözümleme->şuanki()->içerik.Metin, 
                imge::Özellik::Taç);
              Tür->Donatım->_sıra[Tür->Donatım->boyut] = Taç;
              Tür->Donatım->boyut++;
              Çözümleme->tekil();
              i++;
            varsayılan:
              dön Çözümleme->Hataİmla(
                "Sanal tür yanlış taçlandırılmış.");
          }
        }
      varsayılan: 
        dön Çözümleme->Hataİmla("Sanal tür tanımı için beklenmeyen simge.");
    }
  }
  
  İmge->Kütüphane = Çözümleme->yığınlar.kütüphane.Son();
  Çözümleme->yığınlar.cins.Ekle(Tür);
  durum Çözümleme->şuanki()->özellik: 
  {
    seçim simge::Özellik::Yorum: 
      Çözümleme->sıradaki();
      tekrar;
    seçim simge::Özellik::Küme_Aç: 
    {
      Simge = Çözümleme->sıradaki();
      durum Simge->özellik:
      {
        seçim simge::Özellik::Yorum, simge::Terim::Tür,
              simge::Terim::Ortak, 
              simge::Özellik::Sözcük: 
          Gelen := Çözümleme->türDalları(Tür); 
          eğer Gelen: 
            durum Gelen->özellik:
            {
              seçim imge::Özellik::Bildiri:
                dön Gelen;
            }
        varsayılan:
          dön Çözümleme->Hataİmla("Tür üyesi için beklenmeyen simge.");
      }
    }
    varsayılan:
      Çözümleme->_yalın(Tür);
  }

  Tür->İsimlendir(Hafıza);
  Çözümleme->yığınlar.cins.Çıkar();
  İmge->ÖnSıralamayaEkle();
  dön İmge;
} 

