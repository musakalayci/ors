dahili örs::derleme::imge::cins;

Döküm *t 
küresel iş _taç 
  İmge *imge::t, 
  sekme tam,
  _son  *t8 
{
  Döküm->Yaz("%.*staç: %s%s", 
    sekme, Döküm->_sekme,
    İmge->Ad->_harfler, _son);
}

Döküm *t 
küresel iş _tür 
  Tür  *cins::t, 
  sekme  tam,
  _son  *t8 
{
  İmge := Tür->Öz;
  Döküm->hücreAç(İmge->Ad, sekme);
  Döküm->özellikVeKonum(İmge, sekme+2);
  eğer Tür->özellik.türü == cins::Özellik::Kalıp: 
  {
    Döküm->hücreAç("taç", sekme+2);
    her i := 0; i < Tür->Donatım->boyut; i++: 
    {
      Döküm->İmge(Tür->Donatım->_sıra[i], sekme+4, 
        (seç i < (Tür->Donatım->boyut-1):
                  evet:          ',\n',
                  varsayılan: '\n'));
    }
    Döküm->kümeKapa(sekme+2, ',\n');
  }
  Tür->ÖzellikMetni(Döküm->Bellek);
  Döküm->Yaz("%.*sözelleştirme: %s,\n", 
    sekme+2, Döküm->_sekme,
    Döküm->Bellek->_veri);
  //stdio::printf('%.*sÖzellik: %s\n', sekme, Döküm->_sekme, _özellikler[2]); 
  değer _astSon *t8 = boş;
  eğer Tür->Üyeler->boyut: 
  {
    Döküm->kutuAç("üyeler", sekme+2); 
    değer Üye *imge::t = boş;
    her i := 0; i < Tür->Üyeler->boyut; i++: 
    {
      Üye = Tür->Üyeler->Nesneler[i]; 
      
      _astSon = (seç i < (Tür->Üyeler->boyut-1):
                  evet:          ',\n',
                  varsayılan: '\n'); 
      Döküm->İmge(Üye, sekme +4, _astSon);
    }
    
    _astSon = (seç !Tür->Astlar->sayı:
      evet: '\n',
      varsayılan: ',\n');
    Döküm->kutuKapa(sekme+2, _astSon);
  }
  eğer Tür->Astlar->sayı && (Tür->Astlar->sayı > Tür->Üyeler->boyut): 
  {
    Döküm->hücreAç("astlar", sekme+2);
    değer Üye *imge::t = boş;
    her Ast := Tür->Astlar->Baş; Ast; Ast = Ast->Sonraki: 
    {
      Üye = Ast->Öz;
      durum Üye->özellik:
      {
        seçim imge::Özellik::Değişken:
        varsayılan:
        
          _astSon = (seç !Ast->Sonraki:
            evet: ',\n',
            varsayılan: '\n');
          Döküm->İmge(Üye, sekme +4, _astSon);
        
      }
    }
    Döküm->kümeKapa(sekme+2, '\n');
  }
  
  Döküm->kümeKapa(sekme, _son);
}

Döküm *t 
iş boyutlandırma Özet *cins::özet, sekme *tam, _son *t8
{
  Döküm->hücreAç("boyutlandırma", sekme);

  Döküm->Yaz(
    "%.*sderece: %d, boyut: %d, sıralama: %d\n", sekme+2, Döküm->_sekme, 
    Özet->derece, 
    Özet->boyut,
    Özet->sıralama);
  Döküm->Yaz(
    "%.*sekleme: %d, mutlak: %d\n", 
    sekme+2, Döküm->_sekme,
    Özet->ekleme,
    Özet->mutlak); 
  Döküm->kümeKapa(sekme, _son);
}

Döküm *t 
küresel iş TürÖzeti 
  Özet  *cins::özet, 
  sekme  tam, 
  _son  *t8
{
  
  eğer !Özet->Dizi:
  {
    Döküm->kümeAç(sekme); 
    eğer Özet->Taç:
    {
      Döküm->hücreAç("taç", sekme+2);
      değer Ast *cins::özet = boş;
      her i := 0; i < Özet->Taç->boyut; i++: 
      {
        Ast = Özet->Taç->_donatım[i];
        Döküm->Yaz("%.*s%d:\n", sekme+4, Döküm->_sekme, i, Özet, Ast, Özet->Taç->_donatım[i]);
        Döküm->TürÖzeti(Özet->Taç->_donatım[i], sekme+4, '\n');
      }
      Döküm->kümeKapa(sekme+2, _son);
    }
    Döküm->özellikVeİsim(Özet->Öz, sekme+2); 
    Döküm->konum(Özet->Öz, sekme+2);
    Döküm->boyutlandırma(Özet, sekme+2, ',\n');
    //
    Döküm->Bellek->Sıfırla();
    //Özet->Gösterge->Bilgi(Döküm->Bellek);
    makineİsmi :=  Döküm->_Derleme->hafıza.Üretim->TürdenİlkArgümana(&Özet->Öz->nesne);
    Döküm->Yaz("%.*smakine_ismi: '%s'\n", sekme+2, Döküm->_sekme, makineİsmi->_veri); 
    Döküm->kümeKapa(sekme, _son);
  }
  değilse: 
  {
    Döküm->hücreAç("dizi", sekme);
    Döküm->ifade(Özet->Öz->nesne.Boyut->Öz, "boyut", sekme+2, _son);
    Döküm->İmge(Özet->Dizi->Öz, sekme+2, _son);
    Döküm->kümeKapa(sekme, _son);
  }
  
}
