dahili örs::derleme::kütüphane;
dahili örs::derleme::imge;
dahili örs::derleme::hafıza;
dahili örs::derleme::imge::değişken;
dahili örs::derleme;
dahili örs::derleme::nesne;
dahili örs::derleme::imge::cins;
dahili örs::derleme::bölüm;
dahili örs::merkez;
 
uygulamalı tür çizelge  hafıza::küme::çizelge::k'*t;
tür t 
{
  no            d32;
  atıf          d32;
  özelleştirme  d64;
  Öz           *imge::t;
  Çıktı        *değişken::t;
  TürAtfı      *değişken::t;
  Değişkenler  *imge::dağarcık::t;
  Beden        *imge::dağarcık::t;
  Kütüphane    *kütüphane::t;
}

uygulamalı tür işlemler hafıza::dizi::k'*t;
uygulamalı tür altyapıSözlüğü hafıza::küme::k'*altyapıİşlemTaslağı;

tür konum 
{
  özelleştirme  mimari;  
  Öz           *imge::t;
  Çıktı        *cins::özet;  
  Atıf         *imge::t;
  girdi         cins::özetler;
}

tür sanalÇıktı 
{
  Konum *konum;
  Değişkenler *imge::dağarcık::t;
}

küresel iş YeniKonum Hafıza *hafıza::t: *konum 
{
  İmge := imge::Yeni(Hafıza, imge::Özellik::İşlemKonumu); 
  Konum := <*konum>Hafıza->Yeni(@konum, @mimari);
  Konum->Öz = İmge; 
  Konum->Öz->nesne.Özet = cins::YeniÖzet(Hafıza, Konum->Öz);
  Konum->Öz->nesne.Özet->Gösterge = İmge;
  İmge->içerik.İşlemKonumu = Konum; 
  İmge->nesne.Köklendir(nesne::KökTür::İşlem, nesne::Anlam::İşlem);
  dön Konum;
}

küresel iş Yeni Hafıza *hafıza::t, Ad *metin: *t 
{
  İmge              := imge::Adlı(Hafıza, Ad, imge::Özellik::İşlemTanımı); 
  İşlem             := <*t>Hafıza->Yeni(@t, @mimari); 
  İşlem->Öz          = İmge;
  İşlem->no          = Hafıza->Derleme->sayaçlar.Tür();
  İşlem->Değişkenler = imge::dağarcık::Yeni(Hafıza, 0); 
  İmge->içerik.İşlem = İşlem; 
  İmge->nesne.Yapılandır(Hafıza, İmge, boş, 256, nesne::Anlam::İşlem);
  dön İşlem;
}

/*çözümleme dışındaki işlem tanımları için*/
küresel iş Yeni2 
  Hafıza *hafıza::t, 
  Ad *metin, 
  Dönüş *imge::cins::özet : *t 
{
  YeniAd            := Hafıza->Metinden(Ad);
  İmge              := imge::Adlı(Hafıza, Ad, imge::Özellik::İşlemTanımı); 
  İşlem             := <*t>Hafıza->Yeni(@t, @mimari); 
  İşlem->Öz          = İmge;
  İşlem->no          = Hafıza->Derleme->sayaçlar.Tür();
  İşlem->Değişkenler = imge::dağarcık::Yeni(Hafıza, 0); 
  İmge->içerik.İşlem = İşlem; 
  İmge->nesne.Yapılandır(Hafıza, İmge, boş, 256, nesne::Anlam::İşlem); 
  DönüşÖzeti := Dönüş;
  eğer !Dönüş: 
    DönüşÖzeti = imge::cins::YeniÖzetBoş(Hafıza); 
  İşlem->Çıktı = imge::değişken::Yeni2(
    Hafıza, 
    "sonuç",
    0,
    DönüşÖzeti);  
  dön İşlem;
}

İşlem *t 
küresel iş DeğişkenEkle Değişken *imge::değişken::t 
{
  İşlem->Değişkenler->Ekle(Değişken->Öz);
}

İşlem *t 
küresel iş Sonuç : *imge::değişken::t 
{
  Satırlar := &İşlem->Değişkenler->satırlar;
  dön Satırlar->Nesneler[Satırlar->boyut-1]->içerik.Değişken;
}

İşlem *t  
küresel iş Değişkenleriİkile 
  Hafıza *hafıza::t, Çıktı *sanalÇıktı : *imge::t 
{
  eğer !Çıktı: 
    dön boş;
  Dağarcık := imge::dağarcık::Yeni(Hafıza, Hafıza->Derleme->sayaçlar.Genel());
  Nesneler := İşlem->Değişkenler->satırlar.Nesneler; 
  boyut    := İşlem->Değişkenler->satırlar.boyut; 
  değer Değişken *imge::değişken::t = boş; 
  değer YeniDeğişken *imge::değişken::t = boş; 

  her i := 0; i < boyut; i++: 
  {
    Değişken = Nesneler[i]->içerik.Değişken; 
    YeniDeğişken = Değişken->İkile(Hafıza); 
    Dağarcık->Ekle(YeniDeğişken->Öz);
  } 
  dön Dağarcık->Öz; 
}


Konum *konum 
küresel sanal iş Hiçİse : eh 
{
  dön Konum->Çıktı->HiçMi();
}

İşlem *t 
küresel sanal iş HiçMi : eh 
{
  dön İşlem->Çıktı->Özet->HiçMi();
}
