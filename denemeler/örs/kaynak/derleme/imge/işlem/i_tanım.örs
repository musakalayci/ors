dahili örs::merkez::iletişim: i;
dahili örs::derleme::bildiri;

İşlem *t 
küresel iş TürBelirle 
  Derleme *derleme::t, 
  Bölüm *bölüm::t : *imge::t
{
  Özet  := İşlem->Çıktı->Özet->Yapılandır(Bölüm); 
  İmge  := İşlem->Öz;
  //i::Acil("------------------------ %p\n", Özet->Öz);
  Konum := YeniKonum(&Derleme->hafıza);
  İşlem->Çıktı->Öz->nesne.Atıf = İşlem->Çıktı->Öz; 
  Konum->Çıktı                 = İşlem->Çıktı->Özet;
  Konum->özelleştirme          = İşlem->özelleştirme; 
  Konum->Atıf                  = İşlem->Öz; 
  Konum->Öz->Kütüphane = Bölüm->Kütüphane;
  Değişken := İşlem->Çıktı; 
  Nesneler := İşlem->Değişkenler->satırlar.Nesneler;  
  boyut    := İşlem->Değişkenler->satırlar.boyut; 
  eğer boyut >= imge::Sınırlar::Değişkenler: 
    dön bildiri::Özel(
          Bölüm->Kaynak, 
          bildiri::Üretim::Arama, 
          &İşlem->Öz->konum, 
          "'%s' işlemi için değişken sınırı aşılmış.",
          İşlem->Öz->Ad->_harfler);
  
  Konum->girdi.Yapılandır(&Derleme->hafıza, 16); 
  i := 0; 
  bağımsızlık := İşlem->özelleştirme & imge::Özelleştirme::Bağımsız;
  eğer bağımsızlık: 
  {
    İşlem->TürAtfı->özelleştirme |= imge::değişken::Dto::Bağımsız;
  }
  her i < boyut; i++: 
  {
    Değişken = Nesneler[i]->içerik.Değişken; 
    Özet     = Değişken->Özet; 
    Özet->Yapılandır(Bölüm); 
    eğer !Özet: 
      dön boş;
    Değişken->Öz->nesne.Özet = Özet;
    Değişken->Öz->nesne.Atıf = Değişken->Öz; 
    Değişken->Öz->nesne.KalıpNakil(&Özet->Öz->nesne); 
    durum Özet->Gösterge->özellik:  
    {
      seçim imge::Özellik::DeğişkenArgüman: 
        İşlem->özelleştirme |= imge::Özelleştirme::DeğişkenArgüman;
    }
    eğer i < (boyut -1): 
    {
      eğer !bağımsızlık: 
        Konum->girdi.Ekle(Özet);
    }
  }

  Özet = Konum->Öz->nesne.Özet; 
  İmge->nesne.Atıf = İmge; 
  İmge->nesne.Özet = Özet; 
  Özet->Yapılandır(Bölüm);
  İmge->nesne.KalıpNakil(&Özet->Öz->nesne); 
  İmge->nesne.Anlamlandır(nesne::Anlam::İşlem);
  //i::Yaz("Tanımlanan : %d %s\n", İmge->özellik, İmge->Ad->_harfler);
 // Derleme->Döküm->İmge(Özet->Öz, 0, '\n');
  dön İşlem->Öz;
}

İşlem *t 
küresel iş AltyapıÖnTanımı 
  Derleme *derleme::t, 
  Bölüm *bölüm::t : *imge::t
{
  dön İşlem->Öz;
}

İşlem *t 
küresel iş TüreEkle Bölüm *bölüm::t : *imge::t 
{
  eğer İşlem->TürAtfı: 
  {
    İmge := İşlem->Öz;
    Aranan :=  İşlem->TürAtfı->Özet->Gösterge->Ad;
    Bulunan := Bölüm->Kütüphane->Üyeler->Ara(Aranan);  
    //i::Yaz("ekleniyor: %s, Bulunan %s\n", İşlem->Öz->Ad->_harfler, Bulunan->Ad->_harfler);
    eğer Bulunan:
    {
      durum Bulunan->özellik: 
      {
        seçim imge::Özellik::Tür: 
          Tür := Bulunan->içerik.Tür; 
          İşlem->TürAtfı->Özet->Gösterge = Tür->Öz;
          Tür->Astlar->Ekle(İmge->Ad, İmge);
      }
    }
  }
  dön İşlem->Öz;
}

İşlem *t 
küresel iş Tanım 
  Derleme *derleme::t, 
  Bölüm *bölüm::t : *imge::t 
{
  İmge := İşlem->Öz; 
  //i::Yaz("işlem: %s %x, %x\n", İmge->Ad->_harfler, İşlem->özelleştirme, imge::Özelleştirme::Yaban);
    //i::Yaz("nihayet !!!!! %lx -> %lx\n", İşlem->özelleştirme, İşlem->özelleştirme & imge::Özelleştirme::Giriş);
  eğer İşlem->özelleştirme & imge::Özelleştirme::Bünye: 
    dön İşlem->AltyapıİşlemiTanımı(Derleme, Bölüm);
  eğer İşlem->özelleştirme & imge::Özelleştirme::Sanal:
    dön İşlem->Öz; 
  eğer İşlem->özelleştirme & imge::Özelleştirme::Tanımlıİşlem: 
    dön İşlem->TürBelirle(Derleme, Bölüm);
  

  Bölüm->SıralamayaEkle(İmge); 
  eğer İşlem->özelleştirme & imge::Özelleştirme::Giriş: 
  {
    İmge->nesne.Yaz("main");  
    eğer İmge->Kütüphane != Derleme->kökler.Hedef: 
    {
      dön bildiri::Özel(
        Bölüm->Kaynak, 
        bildiri::Üretim::Arama, 
        &İmge->konum, 
        "Giriş işlemi ast kütüphanelerde bulunamaz.");
    }
    //üretim sıralamasına ekle  
  } 
  değilse: 
  {
    eğer İşlem->özelleştirme & imge::Özelleştirme::Yaban: 
    {
      İmge->nesne.Metin->Yaz("%s",  
      İmge->Ad->_harfler); 
    }
    değilse:
    {
      eğer İşlem->TürAtfı: 
      {
        Tür := İşlem->TürAtfı->Özet->Gösterge->içerik.Tür; 
              İmge->nesne.Metin->Yaz("\"%s::%s:ox%d:ox%0X:%0X_i\"", 
                İmge->Kütüphane->Öz->Ad->_harfler, 
                İmge->Ad->_harfler, 
                Tür->no,
                İmge->Kütüphane->no,
                İşlem->no); 
      }
      değilse: 
      {
        İmge->nesne.Metin->Yaz("\"%s::%s:ox%0X:%0X_i\"", 
        İmge->Kütüphane->Öz->Ad->_harfler, 
        İmge->Ad->_harfler, 
        İmge->Kütüphane->no,
        İşlem->no);
      } 
    }
    
  }
  
      
  dön İşlem->TürBelirle(Derleme, Bölüm);
}


İşlem *t 
küresel iş AltyapıİşlemiTanımı 
  Derleme *derleme::t, 
  Bölüm *bölüm::t : *imge::t 
{
  İmge := İşlem->Öz;

  Gelen := İşlem->TürBelirle(Derleme, Bölüm);
  durum Gelen->özellik: 
  {
    seçim imge::Özellik::Hata: 
      dön Gelen;
  }
  Altyapı := Derleme->Taslaklar->Ara(İmge->Ad);
  eğer Altyapı: 
  {
    İşlem->Öz->özellik = imge::Özellik::Bünyeİşlem;
    Taslak := Altyapı->içerik.Taslak; 

      //i::Acil("--> nihayet buradayım %s %s %d, %d\n",  Bölüm->Kütüphane->Öz->Ad->_harfler,İmge->nesne.Metin->_harfler, İşlem->Öz->özellik, imge::Özellik::Bünyeİşlem);
    Bölüm->SıralamayaEkle(İmge); 
    eğer Taslak->türler: 
    {
      boyut := İşlem->Değişkenler->satırlar.boyut; 
      değer Değişken *imge::değişken::t = boş;
      Bellek := Derleme->Döküm->Bellek; 
      Bellek->Sıfırla(); 
      Bellek->Yaz('llvm.%s', Altyapı->Ad->_harfler);
      her i := 0; i < boyut; i++: 
      {
        Değişken = İşlem->Değişkenler->satırlar.Nesneler[i]; 
        Metin := Değişken->Özet->Öz->nesne.Metin; 
        Bellek->Yaz('%s%s', (seç i < (boyut -1): 
          evet: '.',
          varsayılan: ' '));
      }
      İmge->Yaz("%s", Bellek->_veri); 
    }
    değilse: 
    {

      İmge->Yaz("llvm.%s", Altyapı->Ad->_harfler); 
    }
    Ad := İmge->nesne.Metin; 
    Bulunan := Taslak->Türevler->Ara(Ad); 
    eğer Bulunan: 
    {
      dön bildiri::Özel(
          Bölüm->Kaynak, 
          bildiri::Üretim::Arama, 
          &İşlem->Öz->konum, 
          " Bünye işlemi '%s' tekrar tanımlanmış.",
          İşlem->Öz->Ad->_harfler);
    }
    değilse: 
    {
      Taslak->Türevler->Ekle(Ad, İmge);
    }
  }
  değilse: 
  {
    dön bildiri::Özel(
          Bölüm->Kaynak, 
          bildiri::Üretim::Arama, 
          &İşlem->Öz->konum, 
          "'%s' adında tanımlı altyapı işlemi bulunamadı.",
          İşlem->Öz->Ad->_harfler);
  }
  dön İmge;
}
