dahili örs::derleme::nesne;


tür taç 
{
  boyut     t32;
  _donatım *özet[2];
}



tür özet 
{
  özellikler    d64;
  boyut         d32;
  baytBoyutu    d32;
  sıralama      d32;
  bitSıralaması d32;
  derece        t32;
  mutlak        d32;
  ekleme        d32;
  Kök           *özet; 
  Dizi          *özet;
  Taç           *taç;
  Gösterge      *imge::t;
  Öz            *imge::t;
}

uygulamalı tür özetler hafıza::dizi::k'*özet;

Özet *özet 
küresel iş YeniTaç
  Hafıza *hafıza::t: *taç 
{
  Taç := <*taç>Hafıza->Yeni(@taç, @mimari);
  Özet->Taç = Taç;
  dön Taç;
}

küresel iş 
YeniÖzet Hafıza *hafıza::t, Gösterge *imge::t: *özet 
{
  TürÖzeti := <*özet>Hafıza->Yeni(@özet, 8);
  İmge := imge::Yeni(Hafıza, imge::Özellik::TürÖzeti); 
  TürÖzeti->Öz = İmge;
  İmge->içerik.TürÖzeti = TürÖzeti;
  TürÖzeti->Gösterge = Gösterge; 
  İmge->nesne.Yapılandır(Hafıza, İmge, TürÖzeti, 256, nesne::Anlam::Tür);
  dön TürÖzeti;
}


Özet *özet 
küresel sanal iş TürüYapılandır 
{
  Özet->Öz->nesne.özellik.yapılandırma = 
    nesne::Yapılandırma::TürKısmı;
}



Özet *özet 
küresel iş Yapılandır Bölüm *bölüm::t : *özet 
{
  eğer Özet->YapılandırılmışMı(): 
    dön Özet;
  değer Nesne *nesne::t = boş;
  eğer Özet->Dizi: 
  {
    Gelen := Özet->Dizi->Yapılandır(Bölüm);
    değer _arg *t8 = boş; 
    eğer Gelen->Dizi: 
      _arg = Gelen->Öz->nesne.Metin->_harfler; 
    değilse: 
      _arg = Bölüm->Üretim->TürdenİlkArgümana(&Gelen->Öz->nesne)->_veri;
    boyut := Özet->Öz->nesne.Boyut->Öz->T32ye(Bölüm->Hafıza->Üretim);
    //Boyut->içerik.sayı.Çıktı(Boyut->içerik.sayı.özellik, &Bölüm->Üretim->Bellekler->ilk);
    Özet->Öz->Yaz("[%d x %s]", boyut, _arg);
    Özet->bitSıralaması = Gelen->sıralama; 
    Özet->baytBoyutu    = boyut * Gelen->boyut;
    Özet->Öz->nesne.Özet = Özet; 
    Özet->sıralama = Özet->bitSıralaması; 
    Özet->boyut    = Özet->baytBoyutu;
    Özet->Öz->nesne.Derecelendir(Özet->derece);
    Özet->TürüYapılandır();
    dön Özet;
  }
  Nesne = Özet->nesne(Bölüm); 
  eğer !Nesne: 
    dön boş; 
  eğer Nesne->Hatalıİse(): 
    dön boş;
  Özet->Öz->nesne->Özet = Özet; 
  Özet->Öz->nesne->Öz   = Özet->Öz; 
  derece := Nesne->Derece();
  Özet->derece += derece;
  eğer Özet->derece: 
  {

    Özet->sıralama = yapıtaşı::Boyut::Şey; 
    Özet->boyut    = yapıtaşı::Boyut::Mimari;
  }
  değilse: 
  {
    Özet->sıralama = Özet->bitSıralaması;
    Özet->boyut    = Özet->baytBoyutu;
  }
  Özet->Öz->nesne.Derecelendir(Özet->derece);
  Özet->TürüYapılandır();
  dön Özet;
}

