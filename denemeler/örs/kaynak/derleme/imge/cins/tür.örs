dahili örs::merkez::dizi;
dahili örs::derleme::imge;
dahili örs::derleme;  
dahili örs::derleme::çözümleme::simge;
dahili örs::merkez::c::stdio; 
dahili örs::derleme::hafıza; 
dahili örs::merkez::bellek;

tür özellikler 
{
  türü   tam;
  işleme tam;
}

sayaç Özellik 
{
/*Türlerin kodları*/

  Yaban           = 8;
  Yapıtaşı        = 9;
  Varsayılan      = 10;
  Yalın           = 11;
  Ortak           = 12;
  Tanım           = 13;
  Kalıp           = 14;
  Sayaç           = 15;
  DonatılmışYalın = 16;
  İşlem           = 17;
  Taç             = 18;
  Donatılmış      = 19;
/*Işleme kodları*/
  Tanımlı = 21;
  YabanTanımlı   = 22;
  Beklemede = 23;
  Donatımlı = 24; 
  Son;
}

tür donatım 
{
  no    tam;
  boyut tam;
  Atıf  *t;
  _sıra *imge::t[2];
}

tür t
{
  no           tam;
  boyut        tam;
  sıralama     tam; 
  bitBoyutu    tam; 
  özelleştirme d64;
  özellik      özellikler; 
  Öz          *imge::t;
  Donatım     *donatım;
  Astlar      *imge::sözlük;
  //bu Üyelerin malloc çağrısı yapan 
  //dizi olması sorun olacak. 
  //şimdi değil ama fork işlemini ekleyince olacak.
  Üyeler      *imge::imgeler;
  Üst         *t;
}



uygulamalı tür türler dizi::k'*t; 

tür taç 
{
  boyut     t32;
  _donatım *özet[2];
  Öz       *imge::t;
}




tür çizelge
{
  no            d32;
  çizelge       türler;
  _özetler     *özet[256]; 
  _yapıtaşları *t[256];
}

Çizelge *çizelge 
küresel iş Yapılandır Derleme *derleme::t 
{
  Çizelge->no = 255;
  Çizelge->çizelge.Yapılandır(32); 
} 

Çizelge *çizelge 
küresel iş Temizle 
{
  Çizelge->çizelge.Temizle();
}

Tür *t 
küresel iş İsimlendir Hafıza *hafıza::t 
{

}



Tür *t 
küresel iş ÜyeEkle Üye *imge::t
{
  Tür->Astlar->Ekle(Üye->Ad, Üye);
  durum Üye->özellik: 
  {
    seçim imge::Özellik::Değişken: 
      Üye->içerik.Değişken->sıra = Tür->Üyeler->boyut;
      Tür->Üyeler->Ekle(Üye);
  }
}



Tür *t 
küresel sanal iş 
İşleme durumu tam 
{
  Tür->özellik.işleme = durumu;
}

Tür *t 
küresel iş Temizle 
{
  Tür->Üyeler->Temizle(); 
}

Tür *t 
küresel iş ÖzellikMetni Bellek *bellek::t 
{
  Bellek->Sıfırla();
  durum Tür->özellik.türü: 
  {
    seçim Özellik::Yapıtaşı:
      Bellek->Yaz('yapıtaşı');
    seçim Özellik::Varsayılan:
      Bellek->Yaz('varsayılan');
    seçim Özellik::Yalın:
      Bellek->Yaz('yalın');
    seçim Özellik::Ortak:
      Bellek->Yaz('ortak');
    seçim Özellik::Tanım:
      Bellek->Yaz('tanım');
    seçim Özellik::Kalıp:
      Bellek->Yaz('kalıp');
    seçim Özellik::Sayaç:
      Bellek->Yaz('sayaç');
    seçim Özellik::DonatılmışYalın:
      Bellek->Yaz('donatılmış_yalın');
    seçim Özellik::İşlem:
      Bellek->Yaz('işlem');
    seçim Özellik::Taç:
      Bellek->Yaz('taç');
    seçim Özellik::Donatılmış:
      Bellek->Yaz('donatılmış');
    seçim Özellik::Yaban:
      Bellek->Yaz('yaban');
    varsayılan:
      Bellek->Yaz('belirsiz');
  }
  durum Tür->özellik.işleme: 
  {
    seçim Özellik::Tanımlı: 
      Bellek->Yaz('::tanımlı');
    seçim Özellik::YabanTanımlı:
      Bellek->Yaz('::yaban_tanımlı');
    seçim Özellik::Beklemede: 
      Bellek->Yaz('::beklemede');
    seçim Özellik::Donatımlı:
      Bellek->Yaz('::donatımlı'); 
    varsayılan: 
      Bellek->Yaz('::işlenmemiş');
  }
  Bellek->Yaz('[%d:%d]', 
    Tür->özellik.türü, 
    Tür->özellik.işleme);
}

küresel iş Yeni Hafıza *hafıza::t, Ad *metin, özellik tam: *t 
{
  İmge := imge::Adlı(Hafıza, Ad, imge::Özellik::Tür);
  Tür := <*t>Hafıza->ÖzelYeni(hafıza::Özellik::Tür); 
  Tür->Öz = İmge;  
  Tür->Astlar = <*imge::sözlük>Hafıza->Yeni(@imge::sözlük, 8);
  Tür->Astlar->Yapılandır(Hafıza, 16);
  İmge->içerik.Tür = Tür;
  Tür->Öz->nesne->Türü = (seç özellik:
    Özellik::Sayaç: Hafıza->Derleme->YapıtaşıÖzeti(simge::Terim::T32),
    varsayılan: YeniÖzet(Hafıza, İmge));
  Tür->Üyeler = <*imge::imgeler>Hafıza->Yeni(@imge::imgeler, 8);
  Tür->Üyeler->Yapılandır(Hafıza, 16); 
  Tür->özellik.türü = özellik;
  durum özellik: 
  {
    seçim Özellik::Yapıtaşı:
    seçim Özellik::Kalıp:
      Tür->özelleştirme = 11;
      geç;
    seçim Özellik::Sayaç:
      Tür->no = Hafıza->Derleme->sayaçlar.Tür();
    varsayılan:
      Tür->no = Hafıza->Derleme->sayaçlar.Tür();
      Tür->İsimlendir(Hafıza);
  }
  dön Tür;
}