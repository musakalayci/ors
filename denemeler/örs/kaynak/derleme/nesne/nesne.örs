dahili örs::derleme::imge; 
dahili örs::derleme::hafıza;
dahili örs::merkez::dizi;

sayaç Kesitler 
{
  Derece = 0;
  Sabitlik = 1;
  Görünürlük = 2;
  /*bu anlamın 4de olması kopyalarken önemli. yerini değiştirme.*/
  Anlam      = 4; 
  Kök        = 5;
  Üstİşlem   = 7;
  Yapılandırma = 7;
  Son          = 8;
}

sayaç No 
{
  Varsayılan = 0xFF;
  Boş = 1;
  Diğer = 2;
}

sayaç Anlam 
{
  Satır = 0;
  Değer = 1;
  Tür   = 2;
  Tanım = 3;
  İşlem = 4; 
  Makina = 5;
  Sabit  = 6;
  Hata;
}

sayaç KökSatır 
{
  Satır = 0; 
  Kesit       = 1;
  KesitSonu   = 2;
  Yönlendirme = 3; 
}

sayaç KökTür 
{
  Tür   = 0;
  İşlem = 1;
  Sayı  = 2;
  Ondalık = 3;
  Hiç     = 4;
  Metin   = 5;
}

sayaç KökDeğer 
{
  Değer   = 0;
  İşlem   = 1;
  TürAtfı = 2;
  Dönüş   = 3;
  Dış     = 4;
  Küresel = 5;
  Pi      = 6;
  Sabit   = 7;
  SabitHarfler = 8;
  Sanal = 9;
}

sayaç Yapılandırma 
{
  TürKısmı = 1;
}

sayaç Makina 
{
  /*bir önceki üretilen llvm işlemi*/
  Boş = 0; 
  Yükleme = 1;
  Geç     = 2;
  Yarat   = 3;
  Geçir   = 4;
  İkiz    = 5;
  Tekil   = 6;
  Pi      = 7;
  Değil   = 8;
  Karşılaştırma = 9;
  KonumAlma     = 10;
  KonumDeğeri   = 11;
  KonumDoğrusal = 12;
  KonumTekil    = 13;
  KonumTür      = 14;
  KonumDizi     = 15;
  Konumİşlem    = 16;
  Erişim        = 17;
  ÇeviriKonum   = 18;
  ÇeviriYapıtaşı = 19;
  Çağrı          = 20;
  İçSabit        = 21;
  SanalÇağrı     = 22;
  Hafıza         = 23;
  Dön            = 24;
  SanalDön       = 25;
  Son            = 26;
  Hata;
}

tür kesitler 
{
  derece   t8; 
  anlam    t8;
  kök      t8;
  makina t8;
  yapılandırma t8;
  sabitlik     t8;
  görünürlük   t8;
  _son         t8;
}



tür t 
{
  no        t32;
  ayıklama  d32;
  özellik   kesitler;
  Metin    *metin;
  Boyut    *t;
  Öz       *imge::t; 
  Atıf     *imge::t;
  Özet     *imge::cins::özet;
}

uygulamalı tür nesneler hafıza::dizi::k'*t;






Nesne *t 
küresel sanal iş Derece : tam 
{
  dön <t32>Nesne->özellik.derece;
}

Nesne *t 
küresel sanal iş Makina : tam 
{
  dön <t32> Nesne->özellik.makina;
}

Nesne *t 
küresel sanal iş Kök : tam 
{
  dön <t32> Nesne->özellik.kök;
}

Nesne *t 
küresel sanal iş Derecelendir D tam  
{
  Nesne->özellik.derece += D; 
  
}

Nesne *t 
küresel sanal iş Düşür : tam 
{
  Nesne->özellik.derece --;
  dön <tam>Nesne->özellik.derece;
}

Nesne *t 
küresel sanal iş Yükselt : tam 
{
  Nesne->özellik.derece ++;
  dön <tam>Nesne->özellik.derece;
}

Nesne *t 
küresel iş Yaz Girdi *metin : *t 
{
  eğer Nesne->Metin && Nesne->Metin->Ekle(Girdi): 
  {
    dön Nesne; 
  }
  dön boş;
}

Nesne *t 
küresel sanal iş İşlemlendir işlem t8 
{
  Nesne->özellik.makina = işlem;
}

Nesne *t 
küresel sanal iş Köklendir kök t8, anlam t8 
{
  Nesne->özellik.kök = kök;
  Nesne->özellik.anlam = anlam;
}

Nesne *t 
küresel sanal iş Anlamlandır anlam t8 
{
  Nesne->özellik.anlam = anlam;
}


Nesne *t 
küresel iş Hatalıİse : eh 
{
  eğer !Nesne: 
    dön evet;
  eğer Nesne->Öz: 
  {
    durum Nesne->Öz->özellik: 
    {
      seçim imge::Özellik::Hata: 
        dön evet;
    }
  }
  eğer Nesne->Atıf: 
    durum Nesne->Atıf->özellik: 
    {
      seçim imge::Özellik::Hata: 
        dön evet;
    }
  dön hayır; 
}

Nesne *t 
küresel iş HiçMi : eh 
{
  eğer Nesne: 
  {
    dön Nesne->Özet->HiçMi();
  }
  dön evet; 
}


tür _nesneler 
{
  boyut    t32; 
  hacim    t32; 
  _İçerik *t[16]; 
} 

  Nesneler *_nesneler  
  küresel iş Ekle Nesne *t 
  {
    eğer Nesneler->boyut <= 16:
    {
      Nesneler->_İçerik[Nesneler->boyut] = Nesne; 
      //i::Yaz("ekleniyor %p %p\n", Nesneler, Nesneler->_İçerik[Nesneler->boyut]);
      Nesneler->boyut++; 
    }
  }

  

  Nesneler *_nesneler 
  küresel iş Son : *t
  {
    eğer Nesneler->boyut > 0: 
      dön Nesneler->_İçerik[Nesneler->boyut-1];
  }

  Nesneler *_nesneler
  küresel iş Çıkar : *t  
  {
    eğer Nesneler->boyut > 0: 
    {  
     // hata var burada, x görünmüyor değer g x = boş;
      I := Nesneler->_İçerik[Nesneler->boyut -1];  
     // hata var boş derecesi öz.Nesneler[öz.boyut -1] = g;
      Nesneler->boyut--; 
      dön I;
    }
  } 