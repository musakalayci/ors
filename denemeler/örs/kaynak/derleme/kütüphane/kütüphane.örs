dahili örs::merkez::dizi;
dahili örs::merkez::bellek;
dahili örs::derleme;
dahili örs::merkez::c::stdio;
dahili örs::derleme::hafıza;
dahili örs::derleme::kaynak; 
dahili örs::derleme::hafıza::küme::sözlük;

sayaç Özellik 
{
  Sade = 1;
  İş;
  Yerel;
  Küresel;
}

tür t 
{
  özelik  tam;
  no      d32;
  Öz     *imge::t;
  Üst    *t; 
  Üyeler *imge::sözlük; 
  Astlar *sözlük;
  /*Birimler Hafıza üzerinden derlenecek
   ya ondan ihtiyacım var*/ 
  Bölüm  *bölüm::t;
  Hafıza *hafıza::t;
  Kaynak *kaynak::t;
}

uygulamalı tür kütüphaneler dizi::k'*t;
uygulamalı tür sözlük       hafıza::küme::k'*t;

Birim *t 
küresel sanal iş Ara Ad *metin : *imge::t 
{
  dön Birim->Üyeler->Ara(Ad);
}

Birim *t 
küresel iş AstEkle Ast *t 
{
  Ad := Ast->Öz->Ad;
  Ast->Üst = Birim;
  Gelen := Birim->Astlar->Ara(Ad);
  eğer Gelen: 
  {
    //stdio::printf('kütüphane ast ekle hatalı !!!');  
    bildiri::Özel(
      Birim->Kaynak, 
      bildiri::Üretim::Arama, 
      &Birim->Öz->konum, 
      "%s %s biriminde zaten var.\n", 
      Ad->_harfler, Birim->Öz->Ad->_harfler);
    dön;
  }
  //i::Yaz("boş demi %s->%s %p\n", Birim->Öz->Ad->_harfler, Ad->_harfler, Birim->Bölüm);
  //Birim->Bölüm->Kütüphaneler->Ekle(Ad, Ast);
  Birim->Astlar->Ekle(Ad, Ast);
  Birim->Üyeler->Ekle(Ad, Ast->Öz);
}

Birim *t 
küresel iş Ekle İmge *imge::t: *imge::t 
{
  Gelen := <*imge::t> Birim->Üyeler->Ara(İmge->Ad); 
 // stdio::printf('ekleniyor : %s\n', İmge->Ad->_harfler);
  eğer Gelen: 
  {
    dön bildiri::Özel(
          Birim->Kaynak, 
          bildiri::Üretim::Arama, 
          &Birim->Öz->konum, 
          "%s %s biriminde zaten var.\n", 
          İmge->Ad->_harfler, Birim->Öz->Ad->_harfler);
  }
  durum İmge->özellik:
  {
    seçim imge::Özellik::Bildiri, 
          imge::Özellik::Hata: 
      dön İmge;
    seçim imge::Özellik::Birim: 
      eğer Birim == İmge->içerik.Birim:
      {
        dön bildiri::Özel(
          Birim->Kaynak, 
          bildiri::Üretim::Arama, 
          &Birim->Öz->konum, 
          "sorunlu birim ekleme");
      }
      Birim->AstEkle(İmge->içerik.Birim);
      geç;
    varsayılan: 
      Birim->Üyeler->Ekle(İmge->Ad, İmge);

  }
  dön İmge;
}


küresel iş Yeni Derleme *derleme::t, Ad *metin : *t
{
  Hafıza := &Derleme->hafıza;
  Kütüphane                      := <*t>Hafıza->ÖzelYeni(hafıza::Özellik::Kütüphane);
  Kütüphane->Öz                   = imge::Adlı(Hafıza, Ad, imge::Özellik::Birim);  
  Kütüphane->Öz->Kütüphane        = Kütüphane;
  Kütüphane->Öz->içerik.Birim     = Kütüphane;
  Kütüphane->Üyeler               = <*imge::sözlük>Hafıza->Yeni(@imge::sözlük, @mimari); 
  Kütüphane->Astlar               = <*sözlük>Hafıza->Yeni( @sözlük, @mimari); 
  Kütüphane->no                   = Derleme->sayaçlar.Kütüphane();

  Kütüphane->Üyeler->Yapılandır(Hafıza, 16); 
  Kütüphane->Astlar->Yapılandır(Hafıza, 16);
  Derleme->kökler.birimler.Ekle(Kütüphane);
  dön Kütüphane;
}

