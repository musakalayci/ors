dahili örs::merkez::yol;
dahili örs::merkez::c::stdio;
dahili örs::merkez::c::sys; 
dahili örs::merkez::c; 
dahili örs::merkez::bellek; 
dahili örs::merkez::c::stdlib; 
dahili örs::merkez::c::unistd; 
dahili örs::merkez::c::stdarg;
dahili örs::merkez;


sayaç özellik 
{
  Varsayılan = 11;
  Hedef;
  Tekil;
  Çoğul;
}


tür t 
{
  d             t32;
  özellik       özellik;
  Ad           *metin;
  _çalışmaYolu *t8;
  Bellek       *merkez::bellek::t;
  Kaynak       *kaynak::t;
  Gezme        *kaynak::gezme; 
  Döküm        *döküm::t;

  hafıza        hafıza::t;
  türler        imge::cins::çizelge;
  sayaçlar      sayaçlar;
  kökler        kütüphane::kökler;
  hafızalar     hafıza::hafızalar;
  ürünler       ürün::ürünler; 
  sıralama       ürün::ürünler;
  kaynaklar     kaynak::kaynaklar;
  argümanlar    argümanlar;
  yollar        yollar;
}



değer Sürüm *t8 = '0.0.0';
değer Yazılım *t8 = 'örs';

Derleme *t 
küresel iş 
Başlat 
{
  değer Ast *kaynak::t = boş;
  her i := 0; i < Derleme->hafızalar.boyut; i++:
  {
    Hafıza := Derleme->hafızalar.Nesneler[i];
    Hafıza->Çözümleme->Başlat();
  }
}

Derleme *t 
iş yapılandır argümanSayısı tam, _argümanlar **t8 
{
  Derleme->Bellek = bellek::Yeni();
  Derleme->_çalışmaYolu = temiz(t8[4096]);
  Derleme->argümanlar.Yapılandır(argümanSayısı, _argümanlar);  
  Derleme->argümanlarıOku();
  Derleme->yollar.Yapılandır(Derleme); 
  Derleme->kaynaklar.Yapılandır(32);
  Derleme->hafızalar.Yapılandır(32);
  Derleme->ürünler.Yapılandır(32);  
  Derleme->sayaçlar.Yapılandır();
  Derleme->hafıza.Yapılandır(Derleme);

  Derleme->kökler.Yapılandır(Derleme);

  Gezme := temiz(kaynak::gezme); 

  Gezme->Yapılandır(Derleme);
  Derleme->Gezme = Gezme;
  Derleme->Kaynak =  Derleme->Gezme->KaynaklarıGez(); 
  Derleme->Kaynak->özellik = kaynak::Özellik::Kök; 
  
  Derleme->türler.Yapılandır(Derleme); 

  Derleme->yapıtaşlarınıEkle();
  Derleme->Gezme->Temizle(); 
  Derleme->Döküm = döküm::Yeni(Derleme, stdio::stdout);
}





küresel iş Başlat 
argümanSayısı tam, _argümanlar **t8 
{
  Derleme := temiz(t);
  Derleme->yapılandır(argümanSayısı, _argümanlar); 

  Derleme->Başlat();  
 // Derleme->Döküm->KökBirim();
 // Derleme->Bilgi();
  //yardım();
  Derleme->Temizle();
  sil Derleme;
}

