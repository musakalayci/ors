dahili örs::merkez::yol;
dahili örs::merkez::c::stdio;
dahili örs::merkez::iletişim: i;
dahili örs::merkez::c::sys; 
dahili örs::merkez::c; 
dahili örs::merkez::bellek; 
dahili örs::merkez::c::stdlib; 
dahili örs::merkez::c::unistd; 
dahili örs::merkez::c::stdarg;
dahili örs::merkez;
dahili örs::merkez::renk::ascii: renk; 



sayaç özellik 
{
  Varsayılan = 11;
  Hedef;
  Tekil;
  Çoğul;
}

tür yerelleştirme 
{
  Metin        *metin; 
  VeriMimarisi *metin;
  LlcYolu      *metin; 
  ClangYolu    *metin;
  Sürüm        *metin;
}



tür t 
{
  d                t32;
  özellik          özellik;
  Ad              *metin;
  _çalışmaYolu    *t8;
  Bellek          *merkez::bellek::t;
  Kaynak          *kaynak::t;
  Gezme           *kaynak::gezme; 
  Döküm           *döküm::t;
  İmgeler         *imgeler;
  ÜrünSözlüğü     *ürün::sözlük;  
  Taslaklar       *imge::sözlük;
  Tanımlıİşlemler *imge::işlem::işlemler;
  yerelleştirme    yerelleştirme;
  bölümler         bölüm::bölümler;
  hafıza           hafıza::t;
  türler           imge::cins::çizelge;
  sayaçlar         sayaçlar;
  kökler           kütüphane::kökler;
  hafızalar        hafıza::hafızalar;
  ürünler          ürün::ürünler; 
  sıralama         ürün::ürünler;
  kaynaklar        kaynak::kaynaklar;
  argümanlar       argümanlar; 
  yollar           yollar;
}

tür imgeler 
{
  Tamam *imge::t; 
  Değişken *imge::t; 
  Dearg    *imge::cins::özet;
}

değer Sürüm *t8 = '0.0.0';
değer Yazılım *t8 = 'örs';




Derleme *t 
küresel iş BölümEkle Bölüm *bölüm::t 
{
  eğer Bölüm->no > 1: 
    Derleme->bölümler.Ekle(Bölüm);
}


küresel iş Başlat 
argümanSayısı tam, _argümanlar **t8 
{
  Derleme := temiz(t);
  Derleme->yapılandır(argümanSayısı, _argümanlar); 

  Derleme->başlat();   
  /*Derleme->Döküm->İmge(
    Derleme->kökler.Hedef->Öz, 0, '\n');*/
 // Derleme->Bilgi();
  //yardım();
  Derleme->Temizle(); 
  //emirDeneme();
  sil Derleme;
}

