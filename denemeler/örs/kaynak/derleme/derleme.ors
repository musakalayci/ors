dahili örs::merkez::yol;
dahili örs::merkez::c::stdio;
dahili örs::merkez::c::sys; 
dahili örs::merkez::c; 
dahili örs::merkez::bellek; 
dahili örs::merkez::c::stdlib; 
dahili örs::merkez::c::unistd; 
dahili örs::merkez::c::stdarg;

sayaç özellik 
{
  Varsayılan = 11;
  Hedef;
  Tekil;
  Çoğul;
}

tür yollar 
{
  Hedef  *yol::t; 
  Gerçek *yol::t;
  Üretim *yol::t;
}


Yollar *yollar 
iş Yazdır
{
  Yollar->Hedef->Yazdır();
  Yollar->Üretim->Yazdır();
  Yollar->Gerçek->Yazdır();
}

Yollar *yollar 
iş Temizle 
{
  Yollar->Üretim.Sil();
  Yollar->Gerçek.Sil();
  Yollar->Hedef.Sil();
  //sil Yollar->Üretim;
  //sil Yollar->Gerçek; 
  //sil Yollar->Hedef;
}

Yollar *yollar 
iş Yapılandır Derleme *t 
{
  Yollar->Üretim = yol::Yeni(Yollar->Hedef->_dizi); 

  Yollar->Üretim->DalEkle('üretim');
  Yollar->Hedef->DalEkle('kaynak');  
}



tür t 
{
  d             t32;
  özellik       özellik;
  saydıraç      tam;
  Ad           *metin;
  _çalışmaYolu *t8;
  Bellek       *merkez::bellek::t;
  Döküm        *döküm::t;
  Kaynak       *kaynak::t;
  Gezme        *kaynak::gezme;
  ürünler       ürün::ürünler;
  kaynaklar     kaynak::kaynaklar;
  argümanlar    argümanlar;
  yollar        yollar; 

}

Derleme *t 
küresel iş Sayaç : tam 
{
  Derleme->saydıraç++;
  dön Derleme->saydıraç;
}

sanal değer Sürüm *t8 = '0.0.0';
sanal değer Yazılım *t8 = 'örs';

Derleme *t 
iş ürünleriTemizle 
{
  Derleme->ürünler.Temizle();
}

Derleme *t 
iş kaynaklarıTemizle 
{
  her i := 0; i < Derleme->kaynaklar.boyut; i++: 
  {
    Gelen := Derleme->kaynaklar.Nesneler[i];
    Gelen->Temizle();
    sil Gelen;
  }
  Derleme->kaynaklar.Temizle();
}

Derleme *t 
iş Temizle 
{
  Derleme->kaynaklarıTemizle();
  Derleme->ürünleriTemizle();
  Derleme->yollar.Temizle(); 
  Derleme->Gezme->Temizle();
  sil Derleme->_çalışmaYolu;
  sil Derleme->Bellek; 
  sil Derleme->Gezme;
  sil Derleme->Ad;
}

Derleme *t 
iş yapılandır argümanSayısı tam, _argümanlar **t8 
{
  Derleme->Bellek = bellek::Yeni();
  Derleme->_çalışmaYolu = temiz(t8[4096]);
  Derleme->argümanlar.Yapılandır(argümanSayısı, _argümanlar);  
  Derleme->argümanlarıOku();
  Derleme->yollar.Yapılandır(Derleme); 
  Derleme->kaynaklar.Yapılandır(32);
  Derleme->ürünler.Yapılandır(32); 
  Derleme->saydıraç = 255;
  Gezme := temiz(kaynak::gezme);
  Gezme->Yapılandır(Derleme);
  Derleme->Gezme = Gezme;
  Derleme->Kaynak =  Derleme->Gezme->KaynaklarıGez(); 
  Derleme->Kaynak->Ad = metin::Metinden(Derleme->Ad);
  Derleme->Kaynak->özellik = kaynak::Özellik::Kök;
}

Derleme *t 
küresel iş Bilgi 
{
  stdio::printf('İş: %s\n', Derleme->Ad->_harfler); 
  stdio::printf('Çalışma yolu : %s\n', Derleme->_çalışmaYolu);
  stdio::printf('Gerçek : %s\n', Derleme->yollar.Gerçek->_dizi);
  stdio::printf('Hedef : %s\n', Derleme->yollar.Hedef->_dizi);
  stdio::printf('Üretim : %s\n', Derleme->yollar.Üretim->_dizi); 
  stdio::printf('Kaynaklar :\n');
  değer Ast *kaynak::t = boş;
  her i:=0; i < Derleme->kaynaklar.boyut; i++:
  {
    Ast = Derleme->kaynaklar.Nesneler[i];
    Ast->Bilgi(2);
  }
 // Derleme->Kaynak->Bilgi(2);
}

Derleme *t 
küresel iş 
Başlat 
{
  değer Ast *kaynak::t = boş;
  her i:=0; i < Derleme->kaynaklar.boyut; i++:
  {
    Ast = Derleme->kaynaklar.Nesneler[i];
    durum Ast->özellik:
    { 
      seçim kaynak::Özellik::Dosya,
            kaynak::Özellik::Kök:
      {
        Ast->Çözümleme->Başlat();
      }
    }
  }
}


küresel iş Başlat 
argümanSayısı tam, _argümanlar **t8 
{
  Derleme := temiz(t);
  Derleme->yapılandır(argümanSayısı, _argümanlar); 

  Derleme->Başlat();
  //Derleme->Bilgi();
  Derleme->Temizle();
  sil Derleme;
}

